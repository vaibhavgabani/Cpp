#	Create following tables with necessary constraints

1. Stud_master (rollno, sem, div, name, area, city, dob, bgp, gender)

CREATE TABLE STUD_MASTER (
	ROLLNO INTEGER,
	SEM INTEGER,
	DIV CHAR(1) CHECK (DIV IN('A','B','C','D')),
	NAME VARCHAR(25),
	AREA VARCHAR(25),
	CITY VARCHAR(25) CHECK (CITY IN ('SURAT','BARODA','NAVSARI','VALSAD')),
	DOB DATE CHECK (DOB > '01-JAN-1990'),
	BGP VARCHAR(3) CHECK (BGP IN ('A+','A-','B+','B-','AB+','AB-','O+','O-')),
	GENDER VARCHAR(8) CHECK (GENDER IN ('MALE','FEMALE','OTHER')),
	PRIMARY KEY(ROLLNO,DIV)
);

2. Stud_marks(rollno, div, rdbms, micro, es,wd)

CREATE TABLE STUD_MARKS (
	ROLLNO INTEGER PRIMARY KEY,
	DIV CHAR(1),
	RDBMS INTEGER CHECK (RDBMS >= 1 AND RDBMS <= 100),
	MICRO INTEGER CHECK (MICRO >= 1 AND MICRO <= 100),
	ES INTEGER CHECK (ES >= 1 AND ES <= 100),
	WD INTEGER CHECK (WD >= 1 AND WD <= 100),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV) 
);

3. Activity (activity_id, act_name, act_date)

CREATE TABLE ACTIVITY (
	ACTIVITY_ID INTEGER PRIMARY KEY,
	ACT_NAME VARCHAR(20) UNIQUE,
	ACT_DATE DATE
);

4. Participant (rollno, div, activity_id, perf_grade)

CREATE TABLE PARTICIPANT (
	ROLLNO INTEGER,
	DIV CHAR(1),
	ACTIVITY_ID INTEGER,
	PERF_GRADE CHAR(1) CHECK (PERF_GRADE IN('A','B','C','D','E','F')),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITY
);

5. Fees (payment_id, day_ofpay, rollno, div, amount)

CREATE TABLE FEES (
	PAYMENT_ID INTEGER PRIMARY KEY,
	DAY_OFPAY DATE,
	ROLLNO INTEGER,
	DIV CHAR(1),
	AMOUNT INTEGER CHECK (AMOUNT >= 0),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV) 
);

6. Assignment (assigno, subject, assigndate, faculty)

CREATE TABLE ASSIGNMENT (
	ASSIGNNO INTEGER PRIMARY KEY,
	SUBJECT VARCHAR(20),
	ASSIGNDATE DATE,
	FACULTY VARCHAR(25)
);

7. Assign_Subm (assigno, rollno, sub_status, subdate, grade)

CREATE TABLE ASSIGN_SUBM (
	ASSIGNNO INTEGER,
	ROLLNO INTEGER,
        DIV CHAR(1),
	SUB_STATUS VARCHAR(5) CHECK (SUB_STATUS IN ('TRUE','FALSE')),
	SUBDATE DATE,
	GRADE CHAR(1) CHECK (GRADE IN ('A','B','C','D','E')),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (ASSIGNNO) REFERENCES ASSIGNMENT
);

8. Book (bookid, bookname, author, price)

CREATE TABLE BOOK (
	BOOKID INTEGER PRIMARY KEY,
	BOOKNAME VARCHAR(50),
	AUTHOR VARCHAR(25),
	PRICE INTEGER CHECK (PRICE >= 0)
);

9. BookIssueReturn (bookid, rollno, status(issue/return), irdate)

CREATE TABLE BOOKISSUERETUIRN (
	BOOKID INTEGER,
	ROLLNO INTEGER,
	DIV CHAR(1),
	STATUS VARCHAR(7) CHECK (STATUS IN ('ISSUE','RETURN')),
	IRDATE DATE,
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID)
);




//	Inserting records :

1. STUD_MASTER

INSERT ALL 
INTO STUD_MASTER VALUES(1, 1, 'A', 'ABHAY', 'CITYLIGHT', 'SURAT', '01-MAY-2000', 'A+', 'MALE')
INTO STUD_MASTER VALUES(2, 1, 'B', 'NEEL', 'CITYLIGHT', 'SURAT', '15-JUL-1997', 'B+', 'MALE')
INTO STUD_MASTER VALUES(3, 2, 'C', 'TEESA', 'CITYLIGHT', 'SURAT', '20-MAR-2001', 'A-', 'FEMALE')
INTO STUD_MASTER VALUES(4, 2, 'D', 'HONEYU', 'DOWNTOWN', 'VALSAD', '30-OCT-2000', 'O+', 'FEMALE')
INTO STUD_MASTER VALUES(5, 3, 'A', 'ARSHEET', 'CITYLIGHT', 'BARODA', '11-DEC-2000', 'AB-', 'MALE')
INTO STUD_MASTER VALUES(6, 3, 'B', 'VAIBHAV', 'OLDCITY', 'NAVSARI', '22-APR-1998', 'B+', 'MALE')
INTO STUD_MASTER VALUES(7, 4, 'C', 'RAHUL', 'DOWNTOWN', 'VALSAD', '18-SEP-1999', 'A+', 'MALE')
INTO STUD_MASTER VALUES(8, 4, 'D', 'MAHEK', 'NEWCITY', 'SURAT', '25-JAN-2000', 'O-', 'FEMALE')
INTO STUD_MASTER VALUES(9, 1, 'A', 'TARIQ', 'OLDCITY', 'SURAT', '10-NOV-2001', 'AB-', 'MALE')
INTO STUD_MASTER VALUES(10, 1, 'B', 'SARA', 'CITYLIGHT', 'BARODA', '04-JUN-2000', 'A-', 'FEMALE')
INTO STUD_MASTER VALUES(11, 2, 'C', 'PARTH', 'CITYLIGHT', 'SURAT', '25-JAN-2001', 'O+', 'MALE')
INTO STUD_MASTER VALUES(12, 3, 'A', 'PRIYA', 'CITYLIGHT', 'SURAT', '15-AUG-2001', 'B-', 'FEMALE')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM STUD_MASTER;

	ROLLNO	SEM	DIV	NAME	AREA		CITY	DOB			BGP	GENDER
	1		1	A	ABHAY	CITYLIGHT	SURAT	01-MAY-00	A+	MALE
	2		1	B	NEEL	CITYLIGHT	SURAT	15-JUL-97	B+	MALE
	3		2	C	TEESA	CITYLIGHT	SURAT	20-MAR-01	A-	FEMALE
	4		2	D	HONEYU	DOWNTOWN	VALSAD	30-OCT-00	O+	FEMALE
	5		3	A	ARSHEET	CITYLIGHT	BARODA	11-DEC-00	AB-	MALE
	6		3	B	VAIBHAV	OLDCITY		NAVSARI	22-APR-98	B+	MALE
	7		4	C	RAHUL	DOWNTOWN	VALSAD	18-SEP-99	A+	MALE
	8		4	D	MAHEK	NEWCITY		SURAT	25-JAN-00	O-	FEMALE
	9		1	A	TARIQ	OLDCITY		SURAT	10-NOV-01	AB-	MALE
	10		1	B	SARA	CITYLIGHT	BARODA	04-JUN-00	A-	FEMALE
	11		2	C	PARTH	CITYLIGHT	SURAT	25-JAN-01	O+	MALE
	12		3	A	PRIYA	CITYLIGHT	SURAT	15-AUG-01	B-	FEMALE

2. STUD_MARKS

INSERT ALL 
INTO STUD_MARKS VALUES(1, 'A', 85, 90, 75, 80)
INTO STUD_MARKS VALUES(2, 'B', 92, 88, 80, 75)
INTO STUD_MARKS VALUES(3, 'C', 85, 72, 60, 85)
INTO STUD_MARKS VALUES(4, 'D', 95, 90, 85, 65)
INTO STUD_MARKS VALUES(5, 'A', 80, 85, 80, 88)
INTO STUD_MARKS VALUES(6, 'B', 88, 76, 75, 70)
INTO STUD_MARKS VALUES(7, 'C', 90, 92, 85, 80)
INTO STUD_MARKS VALUES(8, 'D', 70, 65, 65, 75)
INTO STUD_MARKS VALUES(9, 'A', 85, 90, 70, 60)
INTO STUD_MARKS VALUES(10, 'B', 80, 85, 65, 90)
INTO STUD_MARKS VALUES(11, 'C', 72, 74, 68, 80)
INTO STUD_MARKS VALUES(12, 'A', 60, 50, 72, 78)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM STUD_MARKS;

	ROLLNO	DIV	RDBMS	MICRO	ES	WD
	1		A	85		90		75	80
	2		B	92		88		80	75
	3		C	85		72		60	85
	4		D	95		90		85	65
	5		A	80		85		80	88
	6		B	88		76		75	70
	7		C	90		92		85	80
	8		D	70		65		65	75
	9		A	85		90		70	60
	10		B	80		85		65	90
	11		C	72		74		68	80
	12		A	60		50		72	78

3. ACTIVITY

INSERT ALL 
INTO ACTIVITY VALUES(1, 'POSTER COMPETITION', '01-MAR-2016')
INTO ACTIVITY VALUES(2, 'DANCE', '25-FEB-2025')
INTO ACTIVITY VALUES(3, 'SPORTS', '28-FEB-2025')
INTO ACTIVITY VALUES(4, 'SINGING', '10-MAR-2025')
INTO ACTIVITY VALUES(5, 'QUIZ', '20-FEB-2025')
INTO ACTIVITY VALUES(6, 'ART', '01-APR-2025')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ACTIVITY;

	ACTIVITY_ID	ACT_NAME			ACT_DATE
	1			POSTER COMPETITION	01-MAR-16
	2			DANCE				25-FEB-25
	3			SPORTS				28-FEB-25
	4			SINGING				10-MAR-25
	5			QUIZ				20-FEB-25
	6			ART					01-APR-25

4. PARTICIPANT

INSERT ALL 
INTO PARTICIPANT VALUES(1, 'A', 1, 'A')
INTO PARTICIPANT VALUES(2, 'B', 2, 'B')
INTO PARTICIPANT VALUES(3, 'C', 3, 'C')
INTO PARTICIPANT VALUES(3, 'C', 2, 'A')
INTO PARTICIPANT VALUES(4, 'D', 4, 'B')
INTO PARTICIPANT VALUES(5, 'A', 2, 'A')
INTO PARTICIPANT VALUES(6, 'B', 3, 'C')
INTO PARTICIPANT VALUES(7, 'C', 5, 'B')
INTO PARTICIPANT VALUES(8, 'D', 1, 'A')
INTO PARTICIPANT VALUES(9, 'A', 4, 'A')
INTO PARTICIPANT VALUES(10, 'B', 5, 'B')
INTO PARTICIPANT VALUES(11, 'C', 6, 'B')
INTO PARTICIPANT VALUES(12, 'A', 6, 'A')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM PARTICIPANT;

	ROLLNO	DIV	ACTIVITY_ID	PERF_GRADE
	1		A	1			A
	2		B	2			B
	3		C	3			C
	3		C	2			A
	4		D	4			B
	5		A	2			A
	6		B	3			C
	7		C	5			B
	8		D	1			A
	9		A	4			A
	10		B	5			B
	11		C	6			B
	12		A	6			A

5. FEES

INSERT ALL 
INTO FEES VALUES(1, '10-DEC-2022', 1, 'A', 1500)
INTO FEES VALUES(2, '05-JAN-2023', 2, 'B', 1600)
INTO FEES VALUES(3, '15-MAR-2023', 3, 'C', 1400)
INTO FEES VALUES(4, '20-JUN-2023', 4, 'D', 1500)
INTO FEES VALUES(5, '10-MAY-2023', 5, 'A', 1550)
INTO FEES VALUES(6, '15-NOV-2022', 6, 'B', 1450)
INTO FEES VALUES(7, '28-FEB-2023', 7, 'C', 1500)
INTO FEES VALUES(8, '10-APR-2023', 8, 'D', 1600)
INTO FEES VALUES(9, '25-JAN-2023', 9, 'A', 1700)
INTO FEES VALUES(10, '12-MAR-2023', 10, 'B', 1650)
INTO FEES VALUES(11, NULL, 11, 'C', 0)
INTO FEES VALUES(12, NULL, 12, 'A', 0)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM FEES;

	PAYMENT_ID	DAY_OFPAY	ROLLNO	DIV	AMOUNT
	1			10-DEC-22	1		A	1500
	2			05-JAN-23	2		B	1600
	3			15-MAR-23	3		C	1400
	4			20-JUN-23	4		D	1500
	5			10-MAY-23	5		A	1550
	6			15-NOV-22	6		B	1450
	7			28-FEB-23	7		C	1500
	8			10-APR-23	8		D	1600
	9			25-JAN-23	9		A	1700
	10			12-MAR-23	10		B	1650
	11				-		11		C	0
	12				-		12		A	0

6. ASSIGNMENT

INSERT ALL 
INTO ASSIGNMENT VALUES(1, 'RDBMS', '01-FEB-2023', 'PROF. SHARMA')
INTO ASSIGNMENT VALUES(2, 'MICRO', '15-FEB-2023', 'DR. PATEL')
INTO ASSIGNMENT VALUES(3, 'ES', '10-JAN-2023', 'PROF. KUMAR')
INTO ASSIGNMENT VALUES(4, 'WD', '05-MAR-2023', 'DR. MEHTA')
INTO ASSIGNMENT VALUES(5, 'DS', '05-APR-2023', 'DR. SHAH')
INTO ASSIGNMENT VALUES(6, 'IOT', '21-FEB-2023', 'DR. LAD')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ASSIGNMENT;

	ASSIGNNO	SUBJECT	ASSIGNDATE	FACULTY
	1			RDBMS	01-FEB-23	PROF. SHARMA
	2			MICRO	15-FEB-23	DR. PATEL
	3			ES		10-JAN-23	PROF. KUMAR
	4			WD		05-MAR-23	DR. MEHTA
	5			DS		05-APR-23	DR. SHAH
	6			IOT		21-FEB-23	DR. LAD

7. ASSIGN_SUBM

INSERT ALL 
INTO ASSIGN_SUBM VALUES(1, 1, 'A', 'TRUE', '03-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(2, 2, 'B', 'TRUE', '16-FEB-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 3, 'C', 'FALSE', NULL, 'C')
INTO ASSIGN_SUBM VALUES(4, 4, 'D', 'TRUE', '07-MAR-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 5, 'A', 'TRUE', '05-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(1, 6, 'B', 'FALSE', NULL, 'B')
INTO ASSIGN_SUBM VALUES(3, 7, 'C', 'TRUE', '12-JAN-2023', 'A')
INTO ASSIGN_SUBM VALUES(4, 8, 'D', 'TRUE', '08-MAR-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 9, 'A', 'TRUE', '02-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(2, 10, 'B', 'TRUE', '18-FEB-2023', 'B')
INTO ASSIGN_SUBM VALUES(3, 11, 'C', 'FALSE', NULL, 'C')
INTO ASSIGN_SUBM VALUES(4, 12, 'A', 'TRUE', '22-FEB-2023', 'A')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ASSIGN_SUBM;

	ASSIGNNO	ROLLNO	DIV	SUB_STATUS	SUBDATE		GRADE
	1			1		A	TRUE		03-FEB-23	A
	2			2		B	TRUE		16-FEB-23	B
	1			3		C	FALSE			-		C
	4			4		D	TRUE		07-MAR-23	B
	1			5		A	TRUE		05-FEB-23	A
	1			6		B	FALSE			-		B
	3			7		C	TRUE		12-JAN-23	A
	4			8		D	TRUE		08-MAR-23	B
	1			9		A	TRUE		02-FEB-23	A
	2			10		B	TRUE		18-FEB-23	B
	3			11		C	FALSE			-		C
	4			12		A	TRUE		22-FEB-23	A

8. BOOK

INSERT ALL 
INTO BOOK VALUES(1, 'DATABASE SYSTEMS', 'ELMASRI', 500)
INTO BOOK VALUES(2, 'DATA STRUCTURES', 'TANENBAUM', 400)
INTO BOOK VALUES(3, 'OPERATING SYSTEMS', 'SILBERSCHATZ', 550)
INTO BOOK VALUES(4, 'INTRODUCTION TO ALGORITHMS', 'CORMEN', 600)
INTO BOOK VALUES(5, 'COMPUTER NETWORKS', 'KUROSE', 650)
INTO BOOK VALUES(6, 'BUSINESS COMMUNICATION', 'ABHAY', 50)
INTO BOOK VALUES(7, 'OOP', 'BALA', 950)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM BOOK;

	BOOKID	BOOKNAME					AUTHOR			PRICE
	1		DATABASE SYSTEMS			ELMASRI			500
	2		DATA STRUCTURES				TANENBAUM		400
	3		OPERATING SYSTEMS			SILBERSCHATZ	550
	4		INTRODUCTION TO ALGORITHMS	CORMEN			600
	5		COMPUTER NETWORKS			KUROSE			650
	6		BUSINESS COMMUNICATION		ABHAY			50
	7		OOP							BALA			950

9. BOOKISSUERETUIRN

INSERT ALL 
INTO BOOKISSUERETUIRN VALUES(1, 1, 'A', 'ISSUE', '10-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(2, 2, 'B', 'ISSUE', '12-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(1, 3, 'C', 'ISSUE', '05-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(4, 4, 'D', 'RETURN', '08-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(1, 5, 'A', 'ISSUE', '25-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(1, 6, 'B', 'ISSUE', '18-JAN-2023')
INTO BOOKISSUERETUIRN VALUES(2, 7, 'C', 'RETURN', '20-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(3, 8, 'D', 'ISSUE', '02-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(4, 9, 'A', 'RETURN', '12-JAN-2023')
INTO BOOKISSUERETUIRN VALUES(5, 10, 'B', 'ISSUE', '18-FEB-2023')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM BOOKISSUERETUIRN;

	BOOKID	ROLLNO	DIV	STATUS	IRDATE
	1		1		A	ISSUE	10-FEB-23
	2		2		B	ISSUE	12-FEB-23
	1		3		C	ISSUE	05-MAR-23
	4		4		D	RETURN	08-MAR-23
	1		5		A	ISSUE	25-FEB-23
	1		6		B	ISSUE	18-JAN-23
	2		7		C	RETURN	20-FEB-23
	3		8		D	ISSUE	02-MAR-23
	4		9		A	RETURN	12-JAN-23
	5		10		B	ISSUE	18-FEB-23



1. Add 2-3 required columns with alter table command.


2. Update the value in respective columns of the tables.


3. List the students who lives in citylight area of surat city.
Ans:
SELECT * FROM STUD_MASTER
WHERE AREA = 'CITYLIGHT' AND CITY = 'SURAT';


4. Display the detail of the female students whose name start with letter ‘p’.
Ans:
SELECT * FROM STUD_MASTER
WHERE NAME LIKE 'P%';


5. List the students having more than 70 marks in rdbms and micro subject.
Ans:
SELECT S.ROLLNO , S.NAME , S.DIV , M.RDBMS , M.MICRO
FROM STUD_MASTER S,
    STUD_MARKS M
WHERE S.ROLLNO = M.ROLLNO
AND M.RDBMS > 70
AND M.MICRO >70;

6. Display the detail of the students who live in surat or whose blood groupis a+ve
Ans:
SELECT *
FROM STUD_MASTER
WHERE BGP = 'A+'
AND CITY = 'SURAT';


7. Display the detail of the students who paid the fees after 1-jan-2016 and participated in the poster competition.
Ans:
SELECT S.ROLLNO , S.NAME , F.DAY_OFPAY , A.ACT_NAME
FROM STUD_MASTER S,
     FEES F,
     PARTICIPANT P,
     ACTIVITY A
WHERE S.ROLLNO = F.ROLLNO
AND S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND ACT_NAME = 'POSTER COMPETITION';

8. List activity details of the activity to be held on 1st march 2016
Ans
SELECT *
FROM ACTIVITY
WHERE ACT_DATE = '01-MAR-2016';

9. List the students in ascending order of their names
Ans
SELECT NAME
FROM STUD_MASTER
ORDER BY NAME ASC;

10.List the b division students whose names are starting from 's'
SELECT *
FROM STUD_MASTER
WHERE NAME LIKE 'S%';

11.List the average marks of any 2 subjects
Ans
SELECT AVG(RDBMS) AS RDBMS , AVG(MICRO) AS RS
FROM STUD_MARKS;

12.Display student detail having highest marks in rdbms subject


13.List student details of the students participated in dance
Ans
SELECT S.* , A.ACT_NAME
FROM STUD_MASTER S,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND ACT_NAME = 'DANCE';

14.List the student detail who have not paid the fees
SELECT S.* , F.AMOUNT , F.DAY_OFPAY
FROM STUD_MASTER S,
     FEES F
WHERE S.ROLLNO = F.ROLLNO
AND AMOUNT = 0;


15.Drop the column bgp from the stud_master table


16.Display records of students who have received 'A' grade in any activity
Ans:
SELECT S.* , P.PERF_GRADE
FROM STUD_MASTER S,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND PERF_GRADE = 'A';

17.List out female students from surat who have participated in sport activity and dance as well
SELECT S.* , A.ACT_NAME
FROM STUD_MASTER S,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND CITY = 'SURAT'
AND ACT_NAME IN('SPORTS','DANCE')
AND GENDER = 'FEMALE';

18.Display total number of boys participated in sports activity
SELECT COUNT(S.NAME)
FROM STUD_MASTER S,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND S.GENDER = 'MALE'
AND A.ACT_NAME = 'SPORTS';

19. List student detail who have secured more than 70 marks in rdbms and received 'A' grade in Song activity

NOTE : THERE IS NO DATA WITH THIS 


-- Insert data into STUD_MASTER
INSERT INTO STUD_MASTER (ROLLNO, SEM, DIV, NAME, AREA, CITY, DOB, BGP, GENDER)
VALUES (1, '6', 'A', 'John Doe', 'Some Area', 'SURAT', '2000-01-01', 'O+', 'M');

-- Insert data into STUD_MARKS
INSERT INTO STUD_MARKS (ROLLNO, RDBMS, MICRO)
VALUES (1, 75, 80);

-- Insert data into ACTIVITY
INSERT INTO ACTIVITY (ACTIVITY_ID, ACT_NAME)
VALUES (1, 'SONG');

-- Insert data into PARTICIPANT
INSERT INTO PARTICIPANT (ROLLNO, ACTIVITY_ID, PERF_GRADE)
VALUES (1, 1, 'A');

-- Query to list student details
SELECT S.*, A.ACT_NAME, M.RDBMS
FROM STUD_MASTER S,
     STUD_MARKS M,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = M.ROLLNO
AND S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND M.RDBMS >= 70
AND P.PERF_GRADE = 'A'
AND A.ACT_NAME = 'SONG';



20.Display student detail who have received more than 80 marks in ES and secured 'B' grade in 'Singing' activity
SELECT S.*, A.ACT_NAME, M.RDBMS
FROM STUD_MASTER S,
     STUD_MARKS M,
     ACTIVITY A,
     PARTICIPANT P
WHERE S.ROLLNO = M.ROLLNO
AND S.ROLLNO = P.ROLLNO
AND A.ACTIVITY_ID = P.ACTIVITY_ID
AND M.RDBMS >= 70
AND P.PERF_GRADE = 'A'
AND A.ACT_NAME = 'SONG';

21.Use alter table command to add few columns in all the tables


22. List the student detail who have submitted the assignment of ‘rdbms’ subject
SELECT S.*, A.SUB_STATUS , M.SUBJECT
FROM STUD_MASTER S,
     ASSIGN_SUBM A,
     ASSIGNMENT M
WHERE S.ROLLNO = A.ROLLNO
AND S.DIV = A.DIV
AND A.ASSIGNNO = M.ASSIGNNO
AND M.SUBJECT = 'RDBMS'
AND A.SUB_STATUS = 'TRUE';


23.List total assignment of each subject
SELECT SUBJECT, COUNT(*) AS TOTAL_ASSIGNMENTS
FROM ASSIGNMENT
GROUP BY SUBJECT;

24. List Assignment detail for which assignment status is ‘NotSubmitted’
SELECT A.ASSIGNNO, A.SUBJECT, A.ASSIGNDATE, A.FACULTY, S.ROLLNO, S.DIV, ASUB.SUB_STATUS
FROM ASSIGNMENT A, ASSIGN_SUBM ASUB, STUD_MASTER S
WHERE A.ASSIGNNO = ASUB.ASSIGNNO
AND ASUB.ROLLNO = S.ROLLNO
AND ASUB.SUB_STATUS = 'FALSE';

25. List students who have not submitted the assignment but participated in ‘sports’ activity
SELECT S.*
FROM STUD_MASTER S, 
     ASSIGN_SUBM A, 
     PARTICIPANT P, 
     ACTIVITY AC
WHERE S.ROLLNO = A.ROLLNO
AND S.DIV = A.DIV
AND A.SUB_STATUS = 'FALSE'
AND S.ROLLNO = P.ROLLNO
AND S.DIV = P.DIV
AND P.ACTIVITY_ID = AC.ACTIVITY_ID
AND AC.ACT_NAME = 'SPORTS';

26.List student detail who have issued book of DBMS and secured more than 80 marks in RDBMS and participated in dance activity
SELECT S.*
FROM STUD_MASTER S,
     STUD_MARKS M,
     BOOK B,
     BOOKISSUERETUIRN BI,
     PARTICIPANT P,
     ACTIVITY A
WHERE S.ROLLNO = M.ROLLNO
AND S.DIV = M.DIV
AND S.ROLLNO = BI.ROLLNO
AND S.DIV = BI.DIV
AND BI.BOOKID = B.BOOKID
AND S.ROLLNO = P.ROLLNO
AND S.DIV = P.DIV
AND P.ACTIVITY_ID = A.ACTIVITY_ID
AND B.BOOKNAME = 'DATABASE SYSTEMS'
AND M.RDBMS > 80
AND A.ACT_NAME = 'DANCE';

27.Count total number of books issued
SELECT COUNT(*) AS TOTAL_BOOKS_ISSUED
FROM BOOKISSUERETUIRN
WHERE STATUS = 'ISSUE';

28.Display student detail who have issued book of more than 500 rs. and not submitted RDBMS assignment
-- Display student details who have issued a book costing more than 500 rs. and not submitted the RDBMS assignment

SELECT S.ROLLNO, S.NAME, A.SUBJECT, ASM.SUB_STATUS, B.BOOKNAME, B.PRICE
FROM STUD_MASTER S, 
    ASSIGN_SUBM ASM, 
    ASSIGNMENT A, 
    BOOKISSUERETUIRN BI, 
    BOOK B
WHERE S.ROLLNO = ASM.ROLLNO
AND S.ROLLNO = BI.ROLLNO
AND ASM.ASSIGNNO = A.ASSIGNNO
AND B.BOOKID = BI.BOOKID
AND B.PRICE >= 500
AND ASM.SUB_STATUS = 'FALSE'
AND A.SUBJECT = 'RDBMS';